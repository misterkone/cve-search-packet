#!/usr/bin/env python
import socket
import dpkt
import pymongo
import sys
import os


fichier=sys.argv[1]
#src_ip=""

def parse_entete_http_resquest(fichier):
  global requete
  global src_ip
  f=open(fichier)
  pcap = dpkt.pcap.Reader(f)
  for ts, buf in pcap:
       eth = dpkt.ethernet.Ethernet(buf)
       ip = eth.data
       tcp = ip.data
       src_ip=socket.inet_ntoa(ip.src)
       if tcp.dport == 80 and len(tcp.data) > 0:
                   http = dpkt.http.Request(tcp.data)
                   requete = http.headers['user-agent']
                   print src_ip,"User-agent:", requete
                   return requete
def recherche(requete): 
 connect = pymongo.Connection()
 db = connect.cvedb
 collection = db.cves
 e = {}
 e = db.cpe.find()
 for key  in e:
    result= requete[62:69].lower() + ":" + requete[70:]
    if result[0:] in key['id']:
      print src_ip, (key['id'])
      return (key['id']) 

if __name__ == "__main__":
   parse_entete_http_resquest(fichier=sys.argv[1])
if __name__ == "__main__":
   recherche(requete) 

def parse_entete_http_response(fichier):
  global reponse
  f=open(fichier)
  pcap = dpkt.pcap.Reader(f)
  for ts, buf in pcap:
       eth = dpkt.ethernet.Ethernet(buf)
       ip = eth.data
       tcp = ip.data
       src_ip=socket.inet_ntoa(ip.src)
       if tcp.sport == 80 and len(tcp.data) > 0:
                   http = dpkt.http.Response(tcp.data)
                   reponse = http.headers['server']
                   print reponse
                   return reponse

if __name__ == "__main__":
  parse_entete_http_response(fichier=sys.argv[1]) 
if __name__ == "__main__":
   recherche(reponse) 

